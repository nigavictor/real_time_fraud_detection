version: '3.8'

services:
  # Zookeeper - Kafka dependency
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: fraud-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - fraud-network

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: fraud-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - fraud-network

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: fraud-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - fraud-network

  # PostgreSQL for storing fraud alerts and metrics
  postgres:
    image: postgres:15
    container_name: fraud-postgres
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: fraud_detection
      POSTGRES_USER: fraud_user
      POSTGRES_PASSWORD: fraud_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./streaming/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fraud-network

  # Fraud Detection Service
  fraud-detector:
    build:
      context: .
      dockerfile: streaming/docker/Dockerfile.fraud-detector
    container_name: fraud-detector
    depends_on:
      - kafka
      - redis
      - postgres
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      REDIS_HOST: redis
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: fraud_user
      POSTGRES_PASSWORD: fraud_password
      POSTGRES_DB: fraud_detection
    volumes:
      - ./data/models:/app/models:ro
    networks:
      - fraud-network
    restart: unless-stopped

  # Transaction Generator
  transaction-generator:
    build:
      context: .
      dockerfile: streaming/docker/Dockerfile.generator
    container_name: transaction-generator
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      TRANSACTIONS_PER_SECOND: 10
      FRAUD_RATE: 0.05
    networks:
      - fraud-network
    restart: unless-stopped

  # Real-time Dashboard
  dashboard:
    build:
      context: .
      dockerfile: streaming/docker/Dockerfile.dashboard
    container_name: fraud-dashboard
    depends_on:
      - redis
      - postgres
    ports:
      - "8080:8080"
    environment:
      REDIS_HOST: redis
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: fraud_user
      POSTGRES_PASSWORD: fraud_password
      POSTGRES_DB: fraud_detection
    networks:
      - fraud-network
    restart: unless-stopped

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: fraud-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: fraud-detection
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - fraud-network

networks:
  fraud-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: